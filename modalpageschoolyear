import React, { useEffect } from "react";
import { Button, Col, Form, Modal, Row, notification } from "antd";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faTimes } from "@fortawesome/pro-regular-svg-icons";

import { POST } from "../../../../../providers/useAxiosQuery";
import notificationErrors from "../../../../../providers/notificationErrors";
import validateRules from "../../../../../providers/validateRules";
import FloatDatePicker from "../../../../../providers/FloatDatePicker";
import FloatRangePicker from "../../../../../providers/FloatRangePicker";

export default function ModalSchoolYear(props) {
    const { toggleModalSchoolYear, setToggleModalSchoolYear } = props;

    const [form] = Form.useForm();

    const { mutate: mutateSchoolYear, isLoading: isLoadingSchoolYear } = POST(
        `api/school_year`,
        "school_year_list"
    );

    const onFinishForm = (values) => {
        console.log("values", values);

        let data = {
            ...values,
            id:
                toggleModalSchoolYear.data && toggleModalSchoolYear.data.id
                    ? toggleModalSchoolYear.data.id
                    : "",
        };

        mutateSchoolYear(data, {
            onSuccess: (res) => {
                if (res.success) {
                    notification.success({
                        message: "School Year",
                        description: res.message,
                    });
                    setToggleModalSchoolYear({
                        open: false,
                        data: null,
                    });
                    form.resetFields();
                } else {
                    notification.error({
                        message: "School Year",
                        description: res.message,
                    });
                }
            },
            onError: (err) => {
                notificationErrors(err);
            },
        });
    };

    useEffect(() => {
        if (toggleModalSchoolYear.data) {
            form.setFieldsValue(toggleModalSchoolYear?.data);
        }

        return () => {};
    }, [toggleModalSchoolYear]);

    return (
        <Modal
            title={
                toggleModalSchoolYear.data && toggleModalSchoolYear.data.id
                    ? "Edit School Year"
                    : "Add School Year"
            }
            open={toggleModalSchoolYear.open}
            closeIcon={<FontAwesomeIcon icon={faTimes} />}
            footer={null}
            onCancel={() => {
                form.resetFields();
                setToggleModalSchoolYear({
                    open: false,
                    data: null,
                });
            }}
            forceRender
        >
            <Form layout="vertical" form={form} onFinish={onFinishForm}>
                <Row gutter={[12, 0]}>
                    <Col xs={24} sm={24} md={24}>
                        <Form.Item
                            name="school_year"
                            rules={[validateRules.required()]}
                        >
                            <FloatRangePicker
                                className="w-100"
                                label="Sy From"
                                placeholder="Sy From"
                                picker="year"
                                required={true}
                            />
                        </Form.Item>
                    </Col>

                    <Col xs={24} sm={24} md={24} className="text-right">
                        <Button
                            className="btn-main-primary"
                            loading={isLoadingSchoolYear}
                            htmlType="submit"
                        >
                            Submit
                        </Button>
                    </Col>
                </Row>
            </Form>
        </Modal>
    );
}
